Great — using **Replit** with **Firebase as the backend** simplifies things a lot. Firebase handles **authentication, database (Firestore), storage, and hosting**, so we can focus on building the front-end logic and connecting it cleanly.

---

## ✅ Revised Functional Requirements (With Firebase)

You're building:

1. **User Registration Form**
2. **Auto-assignment of Room & Tag Numbers**
3. **Download Details Button (after registration)**
4. **Admin Dashboard:**

   * View, Edit, Delete users
   * Upload Excel of rooms & tags
   * Auto-assign based on gender & availability
   * Filter users by gender, wing, LGA, etc.

---

## 🔥 Firebase Setup Overview

You’ll need:

1. **Firestore** (for user data, rooms, tags)
2. **Firebase Storage** (optional, for Excel uploads)
3. **Firebase Auth** (optional admin login)
4. **Cloud Functions** (optional for processing Excel)

---

## 🔧 Firestore Database Structure

Here’s a simple structure:

### `/users`

```json
{
  firstName: "John",
  surname: "Doe",
  middleName: "Michael",
  dob: "2002-05-01",
  gender: "Male",
  phone: "08012345678",
  email: "john@example.com",
  stateOfOrigin: "Lagos",
  lga: "Ikeja",
  roomNumber: "A101",
  tagNumber: "TAG-001",
  createdAt: Timestamp
}
```

### `/rooms`

```json
{
  wing: "A",
  roomNumber: "A101",
  gender: "Male",
  totalBeds: 4,
  availableBeds: 2
}
```

### `/tags`

```json
{
  tagNumber: "TAG-001",
  isAssigned: false
}
```

---

## 🧑‍💻 Registration Form Logic

On submission:

1. Validate user input.
2. Query available **rooms** by gender and available beds.
3. Assign the first matching room (decrease availableBeds by 1).
4. Assign the first unused **tag number** (mark as assigned).
5. Save all user info to Firestore.
6. Show a “Download Details” button:

   * Export a basic HTML or PDF with:

     * Name
     * Room Number
     * Tag Number

---

## 🛠️ Admin Dashboard Features

### 🔄 Live Data Table (Firestore + Realtime updates)

* Table with all `/users`
* Edit / Delete inline
* Filters: gender, state, wing, etc.
* Export as Excel (optional)

### 📤 Excel Upload (for rooms and tags)

You can allow admin to upload:

* `.xlsx` files using a file input
* Parse the file using a JS library like `xlsx`
* Then write entries to `/rooms` or `/tags` in Firestore

#### Example Excel Format

**Rooms Sheet:**

| Wing | Room Number | Gender | Total Beds |
| ---- | ----------- | ------ | ---------- |
| A    | A101        | Male   | 4          |
| C    | C201        | Female | 3          |

**Tags Sheet:**

| Tag Number |
| ---------- |
| TAG-001    |
| TAG-002    |
| TAG-003    |

---

## 🔘 “Download Info” Button (After Registration)

Once registration is successful:

```html
<button onclick="downloadDetails(user)">Download Info</button>
```

Using JavaScript (with `jsPDF`):

```js
function downloadDetails(user) {
  const doc = new jsPDF();
  doc.text(`Name: ${user.firstName} ${user.middleName} ${user.surname}`, 10, 10);
  doc.text(`Room Number: ${user.roomNumber}`, 10, 20);
  doc.text(`Tag Number: ${user.tagNumber}`, 10, 30);
  doc.save(`${user.firstName}_details.pdf`);
}
```

---

## ✅ Summary of Firebase Collections

| Collection | Purpose               |
| ---------- | --------------------- |
| `users`    | Registered users      |
| `rooms`    | Room info (with beds) |
| `tags`     | Tag numbers available |

---

## ✨ Optional Enhancements

* **Admin Login**: Use Firebase Auth for admin roles.
* **Room Capacity Checking**: Warn if no beds are available.
* **Auto-generated Tag/Room Assignment Logs**
* **Email Confirmation** (via Firebase Function or third-party)

---

## 🟢 Want to Start Now?

If you're ready, I can generate:

* The **registration form (HTML + JS)**
* The **room & tag assignment logic (Firebase Firestore)**
* The **admin dashboard starter** (basic view & filter)

Just tell me:

1. Do you want this all in a single **HTML/JS Replit project**?
2. Should the **admin panel be on a different page**, or use login to show/hide?

Let me know, and I’ll give you working starter code.
